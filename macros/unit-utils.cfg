#textdomain wesnoth-vp
# This file contains unit utility macros for WML authors.

#define PUT_CORPSE_LIZARD Z X Y
    [unit]
        type=Walking Corpse
        side={Z}
        variation=saurian
        x={X}
        y={Y}
		placement=map
		passable=yes
        animate=yes
    [/unit]
    [delay]
        time=200
    [/delay]
#enddef

#define PUT_CORPSE Z X Y
    [unit]
        type=Walking Corpse
        side={Z}
        x={X}
        y={Y}
		placement=map
		passable=yes
        animate=yes
    [/unit]
    [delay]
        time=200
    [/delay]
#enddef

#define PUT_CORPSE_TROLL Z X Y
    [unit]
        type=Walking Corpse
        side={Z}
        variation=troll
        x={X}
        y={Y}
		placement=map
		passable=yes
        animate=yes
    [/unit]
    [delay]
        time=200
    [/delay]
#enddef

#define PUT_SOUL_LIZARD Z X Y
    [unit]
        type=Soulless
        side={Z}
        variation=saurian
        x={X}
        y={Y}
		placement=map
		passable=yes
        animate=yes
    [/unit]
    [delay]
        time=200
    [/delay]
#enddef

#define PUT_SAFEPLACE Z TYPE X Y
    [unit]
        type={TYPE}
        side={Z}
        x={X}
        y={Y}
		placement=map
		passable=yes
        animate=yes
    [/unit]
    [delay]
        time=100
    [/delay]
#enddef

#define GENERIC_UNIT_GUARDIAN SIDE TYPE X Y
    # Creates a generic unit of TYPE belonging to SIDE at X,Y, which has a
    # random name, gender and traits (just like a recruited unit).
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
		ai_special=guardian
        generate_name=yes
        random_traits=yes
        random_gender=yes
        upkeep=full
    [/unit]
#enddef

#define VEN_GUARDIAN SIDE TYPE X Y
    # Creates a generic unit of TYPE belonging to SIDE at X,Y, which has a
    # random name, gender and traits (just like a recruited unit).
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
		ai_special=guardian
        num_traits=4
		[modifications]
			{TRAIT_LOYAL}
			{TRAIT_UNDEAD}
			{TRAIT_STRONG}
			{TRAIT_HEALTHY}
		[/modifications]
    [/unit]
#enddef

#define NAMED_LOYAL_UNIT_3 SIDE TYPE X Y ID_STRING NAME_STRING TRAIT1 TRAIT2
    # Creates a unit with the Loyal trait.
    #
    # Example:
    #! {NAMED_LOYAL_UNIT 1 (Elvish Fighter) 19 16 (Myname) ( _ "Myname")}
    #
    [unit]
        side={SIDE}
        type={TYPE}
        id={ID_STRING}
        name={NAME_STRING}
        x={X}
        y={Y}
        num_traits=3
		[modifications]
			{TRAIT_LOYAL}
			{TRAIT1}
			{TRAIT2}
		[/modifications]
    [/unit]
#enddef

#define NAMED_GENERIC_UNIT_GUARDIAN SIDE TYPE X Y ID_STRING NAME_STRING
    # Creates a generic unit of TYPE belonging to SIDE at X,Y, which has a
    # generated gender and traits (just like a recruited unit).
    [unit]
        side={SIDE}
        type={TYPE}
        id={ID_STRING}
        name={NAME_STRING}
        x={X}
        y={Y}
		ai_special=guardian
        random_traits=yes
        random_gender=yes
        upkeep=full
    [/unit]
#enddef

#define YOUNG_PRERECRUIT TYPE
    [event]
        name=prerecruit
        first_time_only=no
        [filter]
            type={TYPE}
            side=1
        [/filter]
        [message]
            speaker=narrator
            message= _ "You may choose the next action."
            image=wesnoth-icon.png
            [option]
                label= _ "I prefer random trait modifications."
                [command]
                [/command]
            [/option]
            [option]
                label= _ "I need a unit with a pair of trait modifications as <i>quick</i> and <i>resilient</i>."
                [command]
                    [kill]
                        x,y=$x1,$y1
                    [/kill]
                    [unit]
                        side=1
                        type={TYPE}
                        x,y=$x1,$y1
                        upkeep=full
                        attacks_left=0
                        moves=0
                        [modifications]
                            {TRAIT_QUICK_ZANZA}
                            {TRAIT_RESILIENT}
                        [/modifications]
                    [/unit]
                [/command]
            [/option]
			[option]
                label= _ "I need a unit with a pair of trait modifications as <i>quick</i> and <i>strong</i>."
                [command]
                    [kill]
                        x,y=$x1,$y1
                    [/kill]
                    [unit]
                        side=1
                        type={TYPE}
                        x,y=$x1,$y1
                        upkeep=full
                        attacks_left=0
                        moves=0
                        [modifications]
                            {TRAIT_QUICK_ZANZA}
                            {TRAIT_STRONG}
                        [/modifications]
                    [/unit]
                [/command]
            [/option]
			[option]
                label= _ "I need a unit with a pair of trait modifications as <i>quick</i> and <i>intelligent</i>."
                [command]
                    [kill]
                        x,y=$x1,$y1
                    [/kill]
                    [unit]
                        side=1
                        type={TYPE}
                        x,y=$x1,$y1
                        upkeep=full
                        attacks_left=0
                        moves=0
                        [modifications]
                            {TRAIT_QUICK_ZANZA}
                            {TRAIT_INTELLIGENT}
                        [/modifications]
                    [/unit]
                [/command]
            [/option]
            [option]
                label= _ "I need a unit with a pair of trait modifications as <i>strong</i> and <i>intelligent</i>."
                [command]
                    [kill]
                        x,y=$x1,$y1
                    [/kill]
                    [unit]
                        side=1
                        type={TYPE}
                        x,y=$x1,$y1
                        upkeep=full
                        attacks_left=0
                        moves=0
                        [modifications]
                            {TRAIT_STRONG}
                            {TRAIT_INTELLIGENT}
                        [/modifications]
                    [/unit]
                [/command]
            [/option]
            [option]
                label= _ "I need a unit with a pair of trait modifications as <i>strong</i> and <i>resilient</i>."
                [command]
                    [kill]
                        x,y=$x1,$y1
                    [/kill]
                    [unit]
                        side=1
                        type={TYPE}
                        x,y=$x1,$y1
                        upkeep=full
                        moves=0
                        attacks_left=0
                        [modifications]
                            {TRAIT_STRONG}
                            {TRAIT_RESILIENT}
                        [/modifications]
                    [/unit]
                [/command]
            [/option]
            [option]
                label= _ "I need a unit with a pair of trait modifications as <i>intelligent</i> and <i>resilient</i>."
                [command]
                    [kill]
                        x,y=$x1,$y1
                    [/kill]
                    [unit]
                        side=1
                        type={TYPE}
                        x,y=$x1,$y1
                        upkeep=full
                        moves=0
                        attacks_left=0
                        [modifications]
                            {TRAIT_INTELLIGENT}
                            {TRAIT_RESILIENT}
                        [/modifications]
                    [/unit]
                [/command]
            [/option]
        [/message]
    [/event]
#enddef

#define YOUNG_PRERECRUIT_EVENT
	{YOUNG_PRERECRUIT (Ref Young Saurian)}
	{YOUNG_PRERECRUIT (Ref Saurian Devotee)}
	{YOUNG_PRERECRUIT (Deep Young Saurian)}
	{YOUNG_PRERECRUIT (Young Saurian)}
#enddef

#define RECALL_TRAIT TRAIT
    [recall]
        trait={TRAIT}
		fire_event=yes
    [/recall]
#enddef